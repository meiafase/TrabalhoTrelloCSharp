// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20241006212258_AtualizandoBanco3")]
    partial class AtualizandoBanco3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("API.Models.Comentarios", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdTarefa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdTarefa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("API.Models.Quadros", b =>
                {
                    b.Property<int>("IdQuadro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloQuadro")
                        .HasColumnType("TEXT");

                    b.HasKey("IdQuadro");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Quadros");
                });

            modelBuilder.Entity("API.Models.Tarefas", b =>
                {
                    b.Property<int>("IdTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataEntregaTarefa")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoTarefa")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdQuadro")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloTarefa")
                        .HasColumnType("TEXT");

                    b.HasKey("IdTarefa");

                    b.HasIndex("IdQuadro");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("API.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailUsuario")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("TEXT");

                    b.Property<string>("SenhaUsuario")
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("API.Models.Comentarios", b =>
                {
                    b.HasOne("API.Models.Tarefas", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Usuarios", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API.Models.Quadros", b =>
                {
                    b.HasOne("API.Models.Usuarios", "Usuario")
                        .WithMany("Quadros")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API.Models.Tarefas", b =>
                {
                    b.HasOne("API.Models.Quadros", "Quadro")
                        .WithMany("Tarefas")
                        .HasForeignKey("IdQuadro");

                    b.HasOne("API.Models.Usuarios", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Quadro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API.Models.Quadros", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("API.Models.Tarefas", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("API.Models.Usuarios", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Quadros");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
